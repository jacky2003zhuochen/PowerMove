// Generated from Cirq v1.0.0

OPENQASM 2.0;
include "qelib1.inc";


// Qubits: [q(0), q(1), q(2), q(3), q(4), q(5), q(6), q(7), q(8), q(9), q(10), q(11), q(12), q(13), q(14), q(15), q(16), q(17), q(18), q(19)]
qreg q[20];
creg m0[20];  // Measurement: q(0),q(1),q(2),q(3),q(4),q(5),q(6),q(7),q(8),q(9),q(10),q(11),q(12),q(13),q(14),q(15),q(16),q(17),q(18),q(19)


ry(pi*3.3053292885) q[0];
ry(pi*2.6733216072) q[1];
ry(pi*1.3073738963) q[2];
ry(pi*3.9165328058) q[3];
ry(pi*2.3792868243) q[4];
ry(pi*1.429941487) q[5];
ry(pi*3.8640519931) q[6];
ry(pi*1.8361910862) q[7];
ry(pi*3.1254359932) q[8];
ry(pi*2.0225359907) q[9];
ry(pi*3.6256618571) q[10];
ry(pi*2.724985315) q[11];
ry(pi*0.6261629215) q[12];
ry(pi*0.6613012244) q[13];
ry(pi*3.0459937577) q[14];
ry(pi*3.6049482022) q[15];
ry(pi*2.5845256727) q[16];
ry(pi*1.4103061226) q[17];
ry(pi*1.4569975952) q[18];
ry(pi*1.1354844478) q[19];
rz(pi*3.3209693709) q[0];
rz(pi*0.6983627398) q[1];
rz(pi*1.3613111769) q[2];
rz(pi*3.1279480304) q[3];
rz(pi*2.5841545759) q[4];
rz(pi*3.8509003356) q[5];
rz(pi*2.0748257926) q[6];
rz(pi*2.1222950772) q[7];
rz(pi*0.8434613965) q[8];
rz(pi*0.2950517348) q[9];
rz(pi*2.9489976952) q[10];
rz(pi*0.188723092) q[11];
rz(pi*1.2516216719) q[12];
rz(pi*2.3355181136) q[13];
rz(pi*3.5244201095) q[14];
rz(pi*0.3002854733) q[15];
rz(pi*2.2060577975) q[16];
rz(pi*3.7456323567) q[17];
rz(pi*3.8369790602) q[18];
rz(pi*3.8165495187) q[19];
cx q[0],q[1];
cx q[1],q[2];
ry(pi*3.0139561206) q[0];
cx q[2],q[3];
ry(pi*0.5481108421) q[1];
rz(pi*3.6411700615) q[0];
cx q[3],q[4];
ry(pi*0.1954310219) q[2];
rz(pi*3.1746944735) q[1];
cx q[4],q[5];
ry(pi*0.5698996226) q[3];
rz(pi*0.675229976) q[2];
cx q[5],q[6];
ry(pi*0.4094190851) q[4];
rz(pi*0.0017840802) q[3];
cx q[6],q[7];
ry(pi*0.0085565378) q[5];
rz(pi*3.7351104809) q[4];
cx q[7],q[8];
ry(pi*2.0575880107) q[6];
rz(pi*2.1628092537) q[5];
cx q[8],q[9];
ry(pi*1.4487536269) q[7];
rz(pi*1.8857017434) q[6];
cx q[9],q[10];
ry(pi*2.4761500451) q[8];
rz(pi*2.7391135257) q[7];
cx q[10],q[11];
ry(pi*2.9687392196) q[9];
rz(pi*2.1068034373) q[8];
cx q[11],q[12];
ry(pi*2.0675707004) q[10];
rz(pi*1.0205404857) q[9];
cx q[12],q[13];
ry(pi*3.6430340979) q[11];
rz(pi*2.4117835019) q[10];
cx q[13],q[14];
ry(pi*2.255626094) q[12];
rz(pi*3.0127709977) q[11];
cx q[14],q[15];
ry(pi*0.212462625) q[13];
rz(pi*3.7369761148) q[12];
cx q[15],q[16];
ry(pi*3.0306817369) q[14];
rz(pi*0.4095705505) q[13];
cx q[16],q[17];
ry(pi*0.3831601043) q[15];
rz(pi*2.0395922923) q[14];
cx q[17],q[18];
ry(pi*3.935270106) q[16];
rz(pi*1.1516937402) q[15];
cx q[18],q[19];
ry(pi*1.490405982) q[17];
rz(pi*2.5507667363) q[16];
ry(pi*3.7515540933) q[18];
ry(pi*2.3483586282) q[19];
rz(pi*1.0751062976) q[17];
rz(pi*2.3392747844) q[18];
rz(pi*3.1462496231) q[19];

// Gate: cirq.MeasurementGate(20, cirq.MeasurementKey(name='q(0),q(1),q(2),q(3),q(4),q(5),q(6),q(7),q(8),q(9),q(10),q(11),q(12),q(13),q(14),q(15),q(16),q(17),q(18),q(19)'), ())
measure q[0] -> m0[0];
measure q[1] -> m0[1];
measure q[2] -> m0[2];
measure q[3] -> m0[3];
measure q[4] -> m0[4];
measure q[5] -> m0[5];
measure q[6] -> m0[6];
measure q[7] -> m0[7];
measure q[8] -> m0[8];
measure q[9] -> m0[9];
measure q[10] -> m0[10];
measure q[11] -> m0[11];
measure q[12] -> m0[12];
measure q[13] -> m0[13];
measure q[14] -> m0[14];
measure q[15] -> m0[15];
measure q[16] -> m0[16];
measure q[17] -> m0[17];
measure q[18] -> m0[18];
measure q[19] -> m0[19];
